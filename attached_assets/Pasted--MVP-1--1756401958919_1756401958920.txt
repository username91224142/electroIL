# Упрощённое ТЗ (MVP) для интернет‑магазина (табак и вейпы, Израиль)

## 1) Краткое описание

Создать **MVP‑версию интернет‑магазина** для продажи табачной продукции и вейпов в Израиле. Оплата — **только наличными**. Основной канал связи и подтверждения заказа — Telegram‑менеджер: **@Dark090111** ([https://t.me/Dark090111](https://t.me/Dark090111)).

## 2) Минимальные функции (MVP)

* Каталог товаров (категории, фильтры, поиск).
* Карточка товара с фото, характеристиками и кнопкой «Написать в Telegram».
* Корзина и оформление заказа (имя, телефон, город/район).
* После оформления — автоматическая отправка заявки менеджеру в Telegram + запись в админку.
* Админ‑панель для менеджера: просмотр заказов, изменение статусов.
* Админ‑панель для товаров: добавление, редактирование и удаление товаров.

## 3) Оплата наличными (упрощённо)

* На сайте указывается, что оплата происходит наличными при получении.
* После оформления заказа менеджер связывается с клиентом через Telegram.
* Курьер получает заказ и отмечает его как «Оплачено» вручную.

## 4) Интеграция с Telegram

* Кнопка «Связаться с менеджером» в карточке товара и на странице корзины.
* Telegram‑бот или webhook для пересылки заявок менеджеру.

## 5) Дизайн и UX

* Уникальный, современный и «премиальный» вид.
* Простая и удобная навигация.
* Лёгкие анимации (hover‑эффекты, плавные переходы).
* Поддержка RU / HE / EN (локализация интерфейса).

## 6) Технологический стек (упрощённый)

* **Frontend:** React.
* **Backend:** Express (Node.js).
* **База данных:** SQLite (для MVP) или MySQL (как альтернатива).
* **ORM:** Prisma.
* **Хостинг:** любая среда без Docker (VPS или PaaS).

## 7) Архитектура MVP

* **Каталог:** товары, категории, фильтры.
* **Корзина:** добавление/удаление товаров, подсчёт суммы.
* **Оформление заказа:** форма + отправка в БД и Telegram.
* **Админка заказов:** список заказов, смена статусов.
* **Админка товаров:** добавление новых товаров, редактирование характеристик и удаление.

## 8) API (базовые эндпоинты)

* `GET /api/products` — список товаров.
* `GET /api/products/:id` — карточка товара.
* `POST /api/cart` — серверная корзина.
* `POST /api/orders` — создать заказ.
* `GET /api/orders` — список заказов (для админки).
* `POST /api/orders/:id/status` — обновить статус заказа.
* `POST /api/products` — добавить товар (админка).
* `PUT /api/products/:id` — обновить товар.
* `DELETE /api/products/:id` — удалить товар.

## 9) Безопасность (MVP)

* Минимальная защита от спама (captcha или rate‑limit).
* Авторизация в админке (логин/пароль).

## 10) Дальнейшее развитие (после MVP)

* Расширенная админка (курьеры, отчёты, статистика).
* Реал‑тайм статусы заказов (WebSocket).
* Более продвинутая система антифрода.
* Контейнеризация (Docker), деплой через CI/CD.
* Перенос с SQLite на PostgreSQL.

---

**Итого:** MVP должен быть на **React + Express + SQLite (Prisma)** с каталогом, корзиной, чекаутом, админкой для заказов и товарами, а также интеграцией с Telegram для заявок. Оплата наличными реализуется через связь с менеджером и подтверждение вручную.
